#! /bin/sh
DEBUGGER=
RHOST=
RPORT=
DRY_RUN=
while getopts DH:P:n opt
do
	case $opt in
		D) DEBUGGER=Y;;
		H) RHOST=$OPTARG;;
		P) RPORT=$OPTARG;;
		n) DRY_RUN=Y;;
		*) false; exit
	esac
done
: ${RHOST:=localhost} ${RPORT:=1234}

shift `expr $OPTIND - 1`
if test -z "$DRY_RUN"
then
	UPD=`which mbr-bootcode-updater 2> /dev/null` || UPD=
	if test -x "$UPD"
	then
		make && "$UPD" disk.img part_enum.bin || exit
	fi
fi
for emu in qemu-system-i386 qemu_softmmu_targets_x86_64 qemu ERROR
do
	case $emu in
		ERROR) echo "No emulator installed!" >& 2; false; exit
	esac
	emu=`which "$emu" 2> /dev/null` || continue
	set -- "$emu" -rtc base=localtime,clock=host -net none -k de -m 2M
	set -- "$@" -name "MS-DOS MBR Test"
	set -- "$@" -uuid 48f6e600-ddc7-11e2-bc4a-001d7dd0d12e
	set -- "$@" -smp 1
	if test -n "$DEBUGGER"
	then
		set -- "$@" -S -gdb tcp:"$RHOST:$RPORT"
		set -- "$@" -nographic # No SDL console.
		set -- "$@" -vnc unix:`pwd`/console # Use 'ssvncviewer ./console' to access
		set -- "$@" -monitor "unix:`pwd`/monitor,server,nowait"
	fi
	d="file=disk.img,index=0,snapshot=off,media=disk"
	d="$d,serial=1NC5626A"
	if test -f cdrom.img
	then
		d="$d,boot=off"
	else
		d="$d,boot=on"
	fi
	set -- "$@" -drive "$d"
	if test -f cdrom.img
	then
		d="file=cdrom.img,index=2,snapshot=off,media=cdrom"
		d="$d,serial=1NC5626B,boot=on"
		set -- "$@" -drive "$d"
	fi
	echo "Running: >>>$*<<<." >& 2
	if test -n "$DRY_RUN"
	then
		echo "(Simulated only.)"
	else
		exec "$@"
		echo "Failed!" >& 2; false
	fi
	exit
done
